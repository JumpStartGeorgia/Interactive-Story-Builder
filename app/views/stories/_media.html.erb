<%-
  model_class = Medium
  model_class_trans = MediumTranslation
  original ||= false
  readonly = {}
  isTO = @trans && original # if mode is translate and screen is original(first)
  readonly = { readonly:true , disabled: true } if isTO

  form_class = @trans == true && original == false ? 'form-translation' : ''
  trans_record = @trans_record
-%>

  <h2 class="form-title"><%= t('.form_title') %></h2>
  <%= semantic_form_for(@item, url: media_story_path(id:params[:id],:format => :js), :html => { :multipart=> true, :id => "mediaForm", :class => "#{form_class}" } , remote: true) do |f| %>
    <%= f.inputs do %>
      <%= f.fields_for :medium_translations, trans_record do |f_translation| %>

        <%# need this hidden field so can test if user has access to edit the locale if user is translator %>
        <%= (hidden_field_tag :current_locale , @item.current_locale) if !isTO %>

        <%= (f_translation.input :locale , :as => :hidden) if !isTO %>

        <%= f_translation.input :title,
        {
          :required => !isTO, :input_html => { id: (!isTO ?  "mediaTitle" : nil) }
          .merge(readonly)
        }
        .merge(( (isTO) ? {} : { hint: t('.hint.title'), placeholder: t('.placeholder.title') })) %>

        <% if @trans %>
          <%# need this hidden field so can properly set value in translation model %>
          <%= f.input :media_type, :as => :hidden %>

        <% else %>
          <div class="radio_buttons input required form-group radio-indent radio-hide-button" id="medium_media_type_input">
            <label class="  control-label" for="medium_media_type">
              <%= model_class.human_attribute_name(:media_type) %>
              <abbr title="<%= t('app.common.required') %>">*</abbr>
              <div class="help-inline" title="<%= t('.hint.media_type')%>">
                <div>?</div>
              </div>
            </label>
            <% types = [[t('.image'), Medium::TYPE[:image], 'glyphicon-picture'], [t('.video'), Medium::TYPE[:video], 'glyphicon-film']] %>
            <div class="radio-container">
              <% types.each do |type| %>
                <div class="radio">
                  <% checked = (type[1] == Medium::TYPE[:image] && @item.media_type.nil?) || type[1] == @item.media_type ? 'checked=checked' : '' %>
                  <input <%= checked %> id="medium_media_type_<%= type[1] %>" name="medium[media_type]" type="radio" value="<%= type[1] %>" <%= (@item.id.present?) ? "disabled" : "" %>>
                  <label class="choice<%= @item.id.present? ? ' disabled' : '' %>" for="medium_media_type_<%= type[1] %>">
                    <span class="glyphicon <%= type[2] %>"></span>
                    <%= type[0] %>
                  </label>
                </div>
                <% if @item.id.present? # the above radion buttons are disabled and so no value is returned so need this to force value in form submit %>
                  <%= f.input :media_type, :as => :hidden %>
                <% end %>
              <% end %>
            </div>
          </div>
        <% end %>

        <%
          asset_record = trans_record.image
          asset_record = trans_record.build_image(:asset_type => Asset::TYPE[:media_image]) if asset_record.blank?
          asset_class = isTO ? 'original-image-asset' : 'translated-image-asset'
        %>
        <%= f_translation.fields_for :image, asset_record do |f_asset| %>
          <%= f_asset.input :asset_type, :as => :hidden %>
          <div id='mediaImageBox' <%=  @item.video_type? ? "style=display:none;" : "" %> >
            <label class=" control-label" for="media-image-preview"><%= t('activerecord.attributes.medium.image') %></label>
            <%
              to_asset = asset_record
              to_asset_exist = to_asset.file.exists?
              to_is_cloned = false
              to_asset_final_id = nil
              to_asset_final_locale = @to
              to_asset_url = ""

              if to_asset_exist
                to_is_cloned = to_asset.asset_clone_id.present?
                to_asset_final_id = to_asset[to_is_cloned ? :asset_clone_id : :id]
                to_asset_final_locale = to_is_cloned ? to_asset.asset_clone.image.locale : to_asset.image.locale
                to_asset_url = to_asset.file.url(:mobile_640)
              end

            %>
            <% if !isTO %>
              <% if !original %>
                <%
                  from_object = @item.with_translation(@from)
                  from_asset = from_object.image
                  from_asset_exist = from_asset.file.exists?
                  from_is_cloned = false
                  from_asset_final_id = nil
                  from_asset_final_locale = @from
                  from_asset_url = ""

                  if from_asset_exist #from_object.present? && from_object.image.present?
                    from_is_cloned = from_asset.asset_clone_id.present?
                    from_asset_final_id = from_asset[from_is_cloned ? :asset_clone_id : :id]
                    from_asset_final_locale = from_is_cloned ? from_asset.asset_clone.image.locale : from_asset.image.locale
                    from_asset_url = from_asset.file.url(:mobile_640)
                  end
                %>
                <div class="boolean input optional checkbox" id="asset_clone_thumbnail">
                  <input name="clone_image_asset" type="hidden" value="0">
                  <label class="  control-label" for="clone_image_asset">
                    <input id="clone_image_asset" name="clone_image_asset" type="checkbox" value="1" <%= 'checked=checked' if to_is_cloned %>><%= t('app.common.clone_asset') %>
                    <div class="help-inline" original-title="<%= t('helpers.hints.clone_asset') %>">
                      <div>?</div>
                    </div>
                  </label>
                </div>

                <% if to_asset_exist %>
                  <% if to_is_cloned && from_asset_final_locale != to_asset_final_locale
                    asset_sources = [ [t("app.language.#{to_asset_final_locale}"), to_asset_final_id, to_asset_url]
                    ]
                    asset_sources << [t("app.language.#{from_asset_final_locale}"), from_asset_final_id, from_asset_url] if from_asset_exist
                    %>
                    <div class="radio_buttons input optional form-group radio-indent radio-hide-button" id="clone_image_asset_sources">
                      <label class="control-label" for="clone_image_asset_sources">
                        <%= t('stories.form.source_to_use') %>
                          <div class="help-inline" title="<%= t('stories.form.hint.source_to_use')%>"><div>?</div></div>
                      </label>
                      <div class="radio-container">
                        <% asset_sources.each_with_index do |asset_source, asset_source_i| %>
                          <div class="radio">
                            <input <%= asset_source_i == 0 ? 'checked=checked' : '' %> id="clone_image_asset_source_<%= asset_source[1] %>" name="clone_image_asset_source" type="radio" value="<%= asset_source[1] %>" data-image-path='<%= "#{asset_source[2]}" %>'>
                            <label class="choice" for="clone_image_asset_source_<%= asset_source[1] %>"><%= asset_source[0] %></label>
                          </div>
                        <% end %>
                      </div>
                    </div>
                  <% end %>
                  <%= preview_image(asset_class, to_asset_url, { "init-path":  to_asset_url, "orig-path": from_asset_url, "is-cloned": to_is_cloned }) %>
                <% else %>
                  <%= preview_image(asset_class, from_asset_url, { "image-new":  true}, false) %>
                <% end %>


                <div id="item-image-asset-clone">
                  <%= f_asset.input :asset_clone_id, :as => :hidden, :input_html => {:'data-original-id' => from_asset_final_id }.merge(to_is_cloned ? { :value => from_asset_final_id } : {}) %>
                </div>

                <div id="item-image-asset" class="item-asset<%= ' not-visible' if to_is_cloned %>">
                  <%= f_asset.input :asset, :as => :file , hint: t('.hint.image') , :input_html => { :id => "mediaImage", accept:".jpeg,.jpg,.png" }, label: false  %>
                </div>
              <% else %>
                <% if to_asset_exist %>
                  <%= preview_image(asset_class, to_asset_url) %>
                <% end %>
                <%= f_asset.input :asset, :as => :file , hint: t('.hint.image') , :input_html => { :id => "mediaImage", accept:".jpeg,.jpg,.png" }, label: false  %>
              <% end %>
            <% else %>
                <div style="height: 35px;">&nbsp;</div>
                <%= preview_image(asset_class, to_asset_url) %>
                <div style="height: 28px;">&nbsp;</div>
            <% end %>
          </div>
        <% end %>


        <%
          asset_record = trans_record.video
          asset_record = trans_record.build_video(:asset_type => Asset::TYPE[:media_video]) if asset_record.blank?
          asset_class = isTO ? 'original-video-asset' : 'translated-video-asset'

          to_asset = asset_record
          to_asset_exist = to_asset.file.exists?
          to_is_cloned = false
          to_asset_final_id = nil
          to_asset_final_locale = @to
          to_asset_url = ""
          to_asset_processed = false

          if to_asset_exist
            to_is_cloned = to_asset.asset_clone_id.present?
            to_asset_final_id = to_asset[to_is_cloned ? :asset_clone_id : :id]
            to_asset_final_locale = to_is_cloned ? to_asset.asset_clone.video.locale : to_asset.video.locale
            to_asset_processed = to_is_cloned ? to_asset.asset_clone.processed : to_asset.processed
            to_asset_url = to_asset.video_url
          end

        %>
        <%= f_translation.fields_for :video, asset_record do |f_asset| %>
          <%= f_asset.input :asset_type, :as => :hidden %>
          <div id='mediaVideoBox' <%=  @item.image_type? ? "style=display:none;" : "" %> >
            <div>
              <label class=" control-label" for="media-video-preview"><%= t('activerecord.attributes.medium.video') %>
                <% if to_asset_exist && !to_is_cloned %>
                  <% if to_asset_processed %>
                    <span class="processed-msg processed"><%= t('app.msgs.video_processed') %></span>
                  <% else %>
                    <span class="processed-msg not-processed"><%= t('app.msgs.video_not_processed') %></span>
                  <% end %>
                <% end %>
              </label>
            </div>
            <% if !isTO %>
              <% if !original %>
                <%
                  from_object = @item.with_translation(@from)
                  from_asset = from_object.video
                  from_asset_exist = from_asset.file.exists?
                  from_is_cloned = false
                  from_asset_final_id = nil
                  from_asset_final_locale = @from
                  from_asset_url = ""
                  from_asset_processed = false

                  if from_asset_exist #from_object.present? && from_object.image.present?
                    from_is_cloned = from_asset.asset_clone_id.present?
                    from_asset_final_id = from_asset[from_is_cloned ? :asset_clone_id : :id]
                    from_asset_final_locale = from_is_cloned ? from_asset.asset_clone.video.locale : from_asset.video.locale
                    from_asset_processed = from_is_cloned ? from_asset.asset_clone.processed : from_asset.processed
                    from_asset_url = from_asset.video_url
                  end
                %>
                <div class="boolean input optional checkbox" id="asset_clone_thumbnail">
                  <input name="clone_video_asset" type="hidden" value="0">
                  <label class="  control-label" for="clone_video_asset">
                    <input id="clone_video_asset" name="clone_video_asset" type="checkbox" value="1" <%= 'checked=checked' if to_is_cloned %>><%= t('app.common.clone_asset') %>
                    <div class="help-inline" original-title="<%= t('helpers.hints.clone_asset') %>">
                      <div>?</div>
                    </div>
                  </label>
                </div>
                <% if to_asset_exist %>
                  <% if to_is_cloned && from_asset_final_locale != to_asset_final_locale
                    asset_sources = [ [t("app.language.#{to_asset_final_locale}"), to_asset_final_id, to_asset_url]
                    ]
                    asset_sources << [t("app.language.#{from_asset_final_locale}"), from_asset_final_id, from_asset_url] if from_asset_exist
                    %>
                    <div class="radio_buttons input optional form-group radio-indent radio-hide-button" id="clone_video_asset_sources">
                      <label class="control-label" for="clone_video_asset_sources">
                        <%= t('stories.form.source_to_use') %>
                          <div class="help-inline" title="<%= t('stories.form.hint.source_to_use')%>"><div>?</div></div>
                      </label>
                      <div class="radio-container">
                        <% asset_sources.each_with_index do |asset_source, asset_source_i| %>
                          <div class="radio">
                            <input <%= asset_source_i == 0 ? 'checked=checked' : '' %> id="clone_video_asset_source_<%= asset_source[1] %>" name="clone_video_asset_source" type="radio" value="<%= asset_source[1] %>" data-video-path='<%= "#{asset_source[2]}" %>'>
                            <label class="choice" for="clone_video_asset_source_<%= asset_source[1] %>"><%= asset_source[0] %></label>
                          </div>
                        <% end %>
                      </div>
                    </div>
                  <% end %>
                  <%= preview_video(asset_class, to_asset_url, to_asset_processed, { "init-path":  to_asset_url, "orig-path": from_asset_url, "is-cloned": to_is_cloned }) %>
                <% else %>
                  <%= preview_video(asset_class, from_asset_url, to_asset_processed, { "video-new":  true}, false) %>
                <% end %>


                <div id="item-video-asset-clone">
                  <%= f_asset.input :asset_clone_id, :as => :hidden, :input_html => {:'data-original-id' => from_asset_final_id}.merge(to_is_cloned ? { :value => from_asset_final_id } : {}) %>
                </div>

                <div id="item-video-asset" class="item-asset<%= ' not-visible' if to_is_cloned %>">
                  <%= f_asset.input :asset, :as => :file , hint: t('.hint.video') , :input_html => { :id => "mediaVideo", accept:".mp4,.mov,.webm,.ogv,.flv,.avi,.wmv" }, label: false %>
                </div>
              <% else %>
                <% if to_asset_exist %>
                  <%= preview_video(asset_class, to_asset_url, to_asset_processed) %>
                <% end %>
                <%= f_asset.input :asset, :as => :file , hint: t('.hint.video') , :input_html => { :id => "mediaVideo", accept:".mp4,.mov,.webm,.ogv,.flv,.avi,.wmv" }, label: false %>
              <% end %>
            <% else %>
              <% if to_asset_exist %>
                <div style="height: 35px;">&nbsp;</div>
                <%= preview_video(asset_class, to_asset_url, to_asset_processed) %>
                <div style="height: 28px;">&nbsp;</div>
              <% else %>
                <div style="height: 66px;">&nbsp;</div>
              <% end %>
            <% end %>
          </div>
        <% end %>

        <%= f_translation.input :caption,
        {
          :input_html => { id: (!isTO ?  "mediaCaption" : nil) }
          .merge(readonly)
        }
        .merge(( (isTO) ? {} : { hint: t('.hint.caption'), placeholder: t('.placeholder.caption') })) %>

      <div class="radio_buttons input optional form-group radio-indent radio-hide-button" id="medium_caption_align_input">
        <label class="control-label" for="medium_caption_align">
          <%= model_class_trans.human_attribute_name(:caption_align) %>
          <% if !isTO %>
            <div class="help-inline" title="<%= t('.hint.caption_align')%>">
              <div>?</div>
            </div>
          <% end %>
        </label>
        <% aligns = [[t('.left'),-1, 'glyphicon-align-left'], [t('.center'),0, 'glyphicon-align-center'], [t('.right'),1, 'glyphicon-align-right']] %>
        <div class="radio-container">
          <% aligns.each do |align| %>
            <div class="radio">
              <% checked = (align[1] == -1 && @item.caption_align.nil?) || align[1] == @item.caption_align ? 'checked=checked' : '' %>
              <% if !isTO %>
              <input <%= checked %> id="medium_medium_translations_attributes_0_caption_align_<%= align[1] %>" name="medium[medium_translations_attributes][0][caption_align]" type="radio" value="<%= align[1] %>">
              <% end %>
              <label class="choice<%= isTO && checked != '' ? ' checked': '' %>" <%= !isTO ? "for=medium_medium_translations_attributes_0_caption_align_#{ align[1]}" : '' %> >
                <span class="glyphicon <%= align[2] %>"></span>
                <%= align[0] %>
              </label>
            </div>
          <% end %>
        </div>
      </div>

      <div class="radio_buttons input optional form-group radio-indent radio-hide-button" id="medium_infobox_type_input">
        <label class="control-label" for="medium_infobox_type">
          <%= model_class_trans.human_attribute_name(:infobox_type) %>
          <% if !isTO %>
            <div class="help-inline" title="<%= t('.hint.infobox_type')%>">
              <div>?</div>
            </div>
          <% end %>
        </label>
        <% infobox_types = [[t('.floating'),0, 'glyphicon-resize-vertical'], [t('.fixed'),1, 'glyphicon-pushpin']] %>
        <div class="radio-container">
          <% infobox_types.each do |type| %>
            <div class="radio">
              <% checked = (type[1] == 0 && @item.infobox_type.nil?) || type[1] == @item.infobox_type ? 'checked=checked' : '' %>
              <% if !isTO %>
                <input <%= checked %> id="medium_medium_translations_attributes_0_infobox_type_<%= type[1] %>" name="medium[medium_translations_attributes][0][infobox_type]" type="radio" value="<%= type[1] %>">
              <% end %>
              <label class="choice<%= isTO && checked != '' ? ' checked': '' %>" <%= !isTO ? "for=medium_medium_translations_attributes_0_infobox_type_#{ type[1]}" : '' %>
                <span class="glyphicon <%= type[2] %>"></span>
                <%= type[0] %>
              </label>
            </div>
          <% end %>
        </div>
      </div>

        <%= f_translation.input :source,
        {
          :input_html => { id: (!isTO ?  "mediaSource" : nil) }
          .merge(readonly)
        }
        .merge(( (isTO) ? {} : { hint: t('.hint.source'), placeholder: t('.placeholder.source') })) %>

        <% if !isTO %>
          <%= f.input :section_id, :as => :hidden , :input_html => { :id => "mediaSection" }  %>
          <% if @item.id.present? %>
            <%= f.input :id, :as => :hidden , :input_html => { :id => "mediaId" }  %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <% if !isTO %>
      <div class="pull-right spacer">
        <%= f.submit t('app.buttons.save'), :class => 'btn btn-default', :"data-disable-with"=> t('app.buttons.processing') %>
        <%= f.submit t('app.buttons.save_and_next'), :class => 'btn btn-default', :name => "commit_and_next", :"data-disable-with"=> t('app.buttons.processing') %>
        <%= f.submit t('helpers.links.next'), :class => 'btn btn-default', :type => :button, :onclick => 'select_next();' %>
        <%= f.submit t('helpers.links.reset'), :class => 'btn btn-default', :type => :reset, :name => :reset %>
      </div>
    <% end %>
  <% end %>
