##############################################################
# whenever you see this block,                               #
#  there is a setting you need to update                     #
##############################################################


##############################################################
# upstream unicorn_XXX = unique name of the upstream
#    - IMPORTANT - do not use '.' in name
# server unix:/tmp/unicorn_XXX = use same name as upstream
#    - IMPORTANT - must match what is in the app's unicorn.rb file
##############################################################
upstream unicorn_Chai-Khana-Staging {
  server unix:/tmp/unicorn_Chai-Khana-Staging.sock fail_timeout=0;
}

server {
  listen 80;
  server_name dev-chaikhana.jumpstart.ge;
  return 301 https://$server_name$request_uri;
}


server {
  ### there can only be one default and deferred on a server
  #  listen 443 ssl http2 default deferred;
  listen 443 ssl http2;

	##############################################################
	# server_name = url to the app
	# root = path to the application public folder
	##############################################################
  server_name dev-chaikhana.jumpstart.ge;
  root /home/chai-khana-staging/Chai-Khana-Staging/current/public;

	##############################################################
	# this app does a lot of data upload processing that takes a long time
	# set this value to equal the value in the unicorn.rb file
	##############################################################
	proxy_read_timeout 60;
	proxy_send_timeout 60;


  ##############################################################
  # ssl settings
  ##############################################################
  # the certificate and key
#  ssl_certificate /etc/letsencrypt/live/dev-chaikhana.jumpstart.ge/fullchain.pem;
#  ssl_certificate_key /etc/letsencrypt/live/dev-chaikhana.jumpstart.ge/privkey.pem;

  # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
  # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;
  ssl_stapling on;
  ssl_stapling_verify off;

  ########################
  ###### THIS IS TURNED OFF BECAUSE THE HEADER IS SENT VIA RAILS WHEN force_ssl IS SET
  ########################
  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  # enables server-side protection from BEAST attacks
  # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
  ssl_prefer_server_ciphers on;

  # disable SSLv3(enabled by default since nginx 0.8.19) since it is less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  # ciphers chosen for forward secrecy and compatibility
  # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
  ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

  # config to not allow the browser to render the page inside an frame or iframe
  # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
  # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
  # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
  add_header X-Frame-Options DENY;

  ###########################################
  ###########################################
  #### the following settings are taken from https://gist.github.com/plentz/6737338 & https://mattbrictson.com/a-better-way-to-ssl

  # do not send the nginx version number in error pages and Server header
  server_tokens off;

  # control buffer overflow attacks
  # https://www.acunetix.com/blog/articles/nginx-server-security-hardening-configuration-1/
  client_body_buffer_size 10k;
  client_max_body_size 50m;
  ###########################################
  # if you are using oauth you will need to increase these to something like 4 and 8k
  ###########################################
  client_header_buffer_size 8k;
  large_client_header_buffers 4 8k;

  # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
  # to disable content-type sniffing on some browsers.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
  # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
  # "soon" on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
  add_header X-Content-Type-Options nosniff;

  # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
  # It is usually enabled by default anyway, so the role of this header is to re-enable the filter for
  # this particular website if it was disabled by the user.
  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  add_header X-XSS-Protection "1; mode=block";

  ###########################################
  ###########################################

  # set timeouts to improve performance
  # https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
  client_body_timeout 12;
  client_header_timeout 12;
  keepalive_timeout 15;
  send_timeout 10;

  # allow nginx to zip files to reduce bandwidth
  # https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
  gzip             on;
  gzip_comp_level  2;
  gzip_min_length  500;
  gzip_proxied     expired no-cache no-store private auth;
  gzip_types       text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml font/opentype;
  gzip_vary        on;

  location ~ ^/(assets|images|javascripts|stylesheets|system)/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  error_page 500 502 504 /500.html;
  error_page 503 @503;

  ##############################################################
  # the following is used to show a maintenance page
  ##############################################################
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  location ~ \.(php|html)$ {
    return 405;
  }


  ##############################################################
  # the following is to allow letsencrypt access to certs
  ##############################################################
  location ~ /.well-known {
    allow all;
  }


	##############################################################
	# @unicorn_XXX = must be the name of the upstream created at the very top
	##############################################################
  try_files $uri/index.html $uri @unicorn_Chai-Khana-Staging;
  location @unicorn_Chai-Khana-Staging {
		##############################################################
		# the following is used to show a maintenance page
		# - simply rename the file maintenance_disable.html to maintenance.html
		#   and this will work
		##############################################################
		if (-f $document_root/maintenance.html) {
		  return 503;
		}

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_redirect off;

   	##############################################################
		# http://unicorn_XXX = must be the name of the upstream created at the very top
		##############################################################
	  proxy_pass http://unicorn_Chai-Khana-Staging;
  }

}
